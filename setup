#!/usr/bin/env sh
zsh="$HOME/.oh-my-zsh"
dotfiles="$HOME/.files"
repos="https://github.com/jimzhan/dotfiles.git"

Xcode=$HOME/Library/Developer/Xcode
XcodeKeys=$Xcode/UserData/KeyBindings
XcodeThemes=$Xcode/UserData/FontAndColorThemes
XcodeTemplates=$Xcode/Templates

log() {
    printf '\033[0;34m%s\033[0m\n' "${1}"
}

info() {
    printf "\e[34m[I]\e[0m ${1}\n"
}

error() {
    printf "\e[31m[✘]\e[0m ${1}\n"
}

success() {
    printf "\e[32m[✔]\e[0m ${1}\n"
}

# to error out
warn() {
  echo "$1" >&2
}

die() {
  warn "$1"
  exit 1
}

# forcely remove any existing link or directory.
deldir() {
  if [ -L $1 ]; then
    unlink "$1"
  elif [ -d $1 ]; then
    rm -rf "$1"
  fi
}

# forcely remove any existing link or file before creating custom links.
link() {
  if [ -h $2 ] ; then
    unlink $2
  elif [ -e $2 ]; then
    rm $2
  fi
  ln -s $1 $2
}

# setup Xcode's themes & file/project templates.
setup_xcode() {
  if [ -d $Xcode ]; then

    if [ $1 = true ]; then
      printf '\033[0;34m%s\033[0m\n' "Start setting up Xcode..."
    else
      printf '\033[0;34m%s\033[0m\n' "Updating Xcode preferences..."
    fi

    deldir $XcodeKeys
    ln -s $dotfiles/Xcode/UserData/KeyBindings		$XcodeKeys

    deldir $XcodeThemes
    ln -s $dotfiles/Xcode/UserData/FontAndColorThemes	$XcodeThemes

    deldir ${XcodeTemplates}
    ln -s "$dotfiles/Xcode/Templates"                   $XcodeTemplates

  fi
}

# ---------------------------------------------------------------------------
# Setup Preferences
# ---------------------------------------------------------------------------
if [ ! -d $dotfiles ]; then
  log "Setting up dotfiles..."
  if [ ! -d $zsh ]; then
    git clone git://github.com/robbyrussell/oh-my-zsh.git $zsh
  fi
  git clone --recursive $repos $dotfiles

  # zsh (as dotfiles's submodule)
  log "Setting up ZSH..."
  export ZSH="$zsh"
  chsh -s /bin/zsh
  success "ZSH installed."

  if [ ! -d "$HOME/.ssh" ]; then
    mkdir $HOME/.ssh
  fi

  # Xcode
  setup_xcode true

# ---------------------------------------------------------------------------
# Update Preferences
# ---------------------------------------------------------------------------
else
  log "Updating dotfiles..."
  cd $dotfiles
  git pull
  git submodule update --init --recursive

  # zsh
  log "Updating ZSH..."
  cd $zsh
  git pull

  setup_xcode false
fi

# ---------------------------------------------------------------------------
# LaunchAgent Services
# ---------------------------------------------------------------------------
for filepath in $HOME/.files/LaunchAgents/*.plist
do
    filename=$(basename $filepath)
    link $dotfiles/LaunchAgents/$filename   $HOME/Library/LaunchAgents/$filename
    launchctl load $HOME/Library/LaunchAgents/$filename
done


# ---------------------------------------------------------------------------
# Ensure We Have Linked All dot files.
# ---------------------------------------------------------------------------
link $dotfiles/proxyswitcher.rc      $HOME/.proxyswitcher.rc

link $dotfiles/zsh/zshrc            $HOME/.zshrc
link $dotfiles/editorconfig         $HOME/.editorconfig

link $dotfiles/tmux/tmux.conf       $HOME/.tmux.conf
link $dotfiles/tmuxinator           $HOME/.tmuxinator

link $dotfiles/ssh/config           $HOME/.ssh/config
link $dotfiles/git/gitconfig        $HOME/.gitconfig
link $dotfiles/git/gitignore_global $HOME/.gitignore_global
link $dotfiles/git/gitmessage       $HOME/.gitmessage

link ${dotfiles}/jshintrc           $HOME/.jshintrc
link ${dotfiles}/eslintrc           $HOME/.eslintrc
link ${dotfiles}/pydistutils.cfg    $HOME/.pydistutils.cfg
link ${dotfiles}/iTerm/com.googlecode.iterm2.plist  $HOME/Library/Preferences/com.googlecode.iterm2.plist

cp ${dotfiles}/fonts/*              $HOME/Library/Fonts/
